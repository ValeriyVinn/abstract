{"mappings":";AAKA,IAAIA,EAAY,KAEhB,MAAMC,EAAmB,CACvBC,aAAcC,SAASC,cAAc,aACrCC,IAAKF,SAASC,cAAc,kBAqB9B,SAASE,IACPL,EAAiBC,aAAaK,UAAUC,OAAO,a;+BAnBjDP;EAAiBC,aAAaO,iBAAiB,SAI/C,WACEH,IACAI,aAAaV,E,IALfC,EAAiBI,IAAII,iBAAiB,SAQtC,WACER,EAAiBC,aAAaK,UAAUI,IAAI,cAE5CX,EAAYY,YAAW,KACrBC,QAAQC,IAAI,SACZR,GAAkB,GAtBK,I,IAmE3B,MAAMS,EAAO,CACXC,SAAUb,SAASC,cAAc,6BACjCa,QAASd,SAASC,cAAc,4BAChCc,UAAWf,SAASC,cAAc,kBAiEpC,MAAMe,EAAQ,IA9Dd,MACEC,aAAYC,OAAEA,IACZC,KAAKC,WAAa,KAClBD,KAAKE,UAAW,EAChBF,KAAKD,OAASA,EAEdC,KAAKG,M,CAGPA,OACE,MAAMC,EAAOJ,KAAKK,kBAAkB,GACpCL,KAAKD,OAAOK,E,CAGdE,QACE,GAAIN,KAAKE,SACP,OAGF,MAAMK,EAAYC,KAAKC,MACvBT,KAAKE,UAAW,EAEhBF,KAAKC,WAAaS,aAAY,KAC5B,MACMC,EADcH,KAAKC,MACOF,EAC1BH,EAAOJ,KAAKK,kBAAkBM,GAEpCX,KAAKD,OAAOK,EAAK,GAChB,I,CAGLQ,OACEC,cAAcb,KAAKC,YACnBD,KAAKE,UAAW,EAChB,MAAME,EAAOJ,KAAKK,kBAAkB,GACpCL,KAAKD,OAAOK,E,CASdC,kBAAkBD,GAOhB,MAAO,C,MANOJ,KAAKc,IACjBC,KAAKC,MAAMZ,EAAS,MAAyB,O,KAElCJ,KAAKc,IAAIC,KAAKC,MAAMZ,EAAS,KAAoB,M,KACjDJ,KAAKc,IAAIC,KAAKC,MAAMZ,EAAS,IAAc,M,CAQ1DU,IAAIG,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,GAIb,CACtBpB,OAWF,UAAyBqB,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,IACtC7B,EAAKG,UAAU2B,YAAc,GAAGH,KAASC,KAAQC,G,IATnD7B,EAAKC,SAASP,iBAAiB,QAASU,EAAMS,MAAMkB,KAAK3B,IACzDJ,EAAKE,QAAQR,iBAAiB,QAASU,EAAMe,KAAKY,KAAK3B,IAyEvD,MAAM4B,EAAM5C,SAASC,cAAc,aAC7B4C,EAAO7C,SAASC,cAAc,SAC9B6C,EAAQ9C,SAASC,cAAc,eAC/B8C,EAAO/C,SAASC,cAAc,cAC9B+C,EAAehD,SAASC,cAAc,kBACtCgD,EAAcjD,SAASC,cAAc,yBACrCiD,EAAelD,SAASC,cAAc,yBACtCkD,EAAanD,SAASC,cAAc,uBAEpCmD,EAAe,CACnB,SACM,QACD,WACG,UACD,UACA,UACA,SACD,UACC,WACC,UACD,WACC,WAGJC,EAAS,CACb,SACM,YACG,WACD,SACF,SACA,WACC,UAGTxB,aAAY,KACV,MAAMyB,EAAc,IAAI3B,KAClB4B,EAAaF,EAAOC,EAAYE,UAChCC,EAAcH,EAAYI,UAC1BC,EAAeP,EAAaE,EAAYM,YACxCC,EAAcP,EAAYQ,cAC1BC,EAAcT,EAAYU,WAC1BC,EAAiBX,EAAYY,aAC7BC,EAAiBb,EAAYc,aAE7BC,EAAgB,EAAaF,EAC7BG,EAAgB,EAAaL,EAC7BM,EACJ,GAAaR,EAAc,GAAkBE,EAGzCO,EAAa,GAAGT,EACnBU,WACAnC,SAAS,EAAG,UAAU2B,EACtBQ,WACAnC,SAAS,EAAG,UAAU6B,EAAeM,WAAWnC,SAAS,EAAG,OAE/DM,EAAIF,YAAca,EAClBV,EAAKH,YAAce,EACnBX,EAAMJ,YAAciB,EACpBZ,EAAKL,YAAcmB,EAEnBb,EAAaN,YAAc,iBAAC8B,IAE5BvB,EAAYyB,MAAMC,UAAY,UAAUN,QACxCnB,EAAawB,MAAMC,UAAY,UAAUL,QACzCnB,EAAWuB,MAAMC,UAAY,UAAUJ,OAAiB,GACvD","sources":["src/partials/examples_and_components/09-asynchrony_and_date__promises/asynchrony_and_date__promises.js"],"sourcesContent":["// import BSN from 'bootstrap.native';\n\n//! Notification ------------\n\nconst NOTIFICATION_DELAY = 5000;\nlet timeoutId = null;\n\nconst refsNotification = {\n  notification: document.querySelector('.js-alert'),\n  btn: document.querySelector('.notification')\n};\n\nrefsNotification.notification.addEventListener('click', onNotificationClick);\nrefsNotification.btn.addEventListener('click', showNotification);\n\n\nfunction onNotificationClick() {\n  hideNotification();\n  clearTimeout(timeoutId);\n}\n\nfunction showNotification() {\n  refsNotification.notification.classList.add('is-visible');\n\n  timeoutId = setTimeout(() => {\n    console.log('qerty');\n    hideNotification();\n  }, NOTIFICATION_DELAY);\n}\n\nfunction hideNotification() {\n  refsNotification.notification.classList.remove('is-visible');\n}\n\n\n//! Annoying ------------------\n\n// const refs = {\n//   modal: document.querySelector('#subscription-modal'),\n//   subscribeBtn: document.querySelector('button[data-subscribe]'),\n// };\n// const PROMPT_DELAY = 3000;\n// const MAX_PROMPT_ATTEMPTS = 3;\n// let promptCounter = 0;\n// let hasSubscribed = false;\n// const modal = new BSN.Modal('#subscription-modal');\n\n// openModal();\n\n// refs.modal.addEventListener('hide.bs.modal', openModal);\n// refs.subscribeBtn.addEventListener('click', onSubscribeBtnClick);\n\n// function openModal() {\n//   if (promptCounter === MAX_PROMPT_ATTEMPTS || hasSubscribed) {\n//     console.log('Максимальное кол-во надоеданий или подписался');\n//     return;\n//   }\n\n//   setTimeout(() => {\n//     console.log('Открываем надоедалку');\n//     modal.show();\n//     promptCounter += 1;\n//   }, PROMPT_DELAY);\n// }\n\n// function onSubscribeBtnClick() {\n//   hasSubscribed = true;\n//   modal.hide();\n// }\n// ! Timer Repeta------------------\n\nconst refs = {\n  startBtn: document.querySelector('button[data-action-start]'),\n  stopBtn: document.querySelector('button[data-action-stop]'),\n  clockface: document.querySelector('.js-clockface'),\n};\n\nclass Timer {\n  constructor({ onTick }) {\n    this.intervalId = null;\n    this.isActive = false;\n    this.onTick = onTick;\n\n    this.init();\n  }\n\n  init() {\n    const time = this.getTimeComponents(0);\n    this.onTick(time);\n  }\n\n  start() {\n    if (this.isActive) {\n      return;\n    }\n\n    const startTime = Date.now();\n    this.isActive = true;\n\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      const time = this.getTimeComponents(deltaTime);\n\n      this.onTick(time);\n    }, 1000);\n  }\n\n  stop() {\n    clearInterval(this.intervalId);\n    this.isActive = false;\n    const time = this.getTimeComponents(0);\n    this.onTick(time);\n  }\n\n  /*\n   * - Принимает время в миллисекундах\n   * - Высчитывает сколько в них вмещается часов/минут/секунд\n   * - Возвращает обьект со свойствами hours, mins, secs\n   * - Адская копипаста со стека 💩\n   */\n  getTimeComponents(time) {\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { hours, mins, secs };\n  }\n\n  /*\n   * Принимает число, приводит к строке и добавляет в начало 0 если число меньше 2-х знаков\n   */\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nconst timer = new Timer({\n  onTick: updateClockface,\n});\n\nrefs.startBtn.addEventListener('click', timer.start.bind(timer));\nrefs.stopBtn.addEventListener('click', timer.stop.bind(timer));\n\n/*\n * - Принимает время в миллисекундах\n * - Высчитывает сколько в них вмещается часов/минут/секунд\n * - Рисует интерфейс\n */\nfunction updateClockface({ hours, mins, secs }) {\n  refs.clockface.textContent = `${hours}:${mins}:${secs}`;\n}\n\n// ! Clock Rysich ------\n\n// https://bool.dev/blog/detail/obyasnenie-event-loop-v-javascript-s-pomoshchyu-vizualizatsii\n// https://www.jscamp.app/ru/docs/javascript25/\n// https://uk.wikipedia.org/wiki/%D0%A7%D0%B0%D1%81_Unix\n\n// console.log('start');\n// setTimeout(()=>{console.log('setTimeout');},0)\n// console.log('finish');\n// console.time('test async')\n\n// console.log(\"start\");\n\n// setTimeout(() => {\n//   console.log(\"setTimeout\");\n// }, 0);\n\n// for (let i = 0; i < 100000; i += 1) {\n//     console.log('value', i);\n// }\n\n// console.timeEnd('test async')\n\n// const date = new Date();\n// console.log(date);\n\n// const namesOfMonth = ['Січень', 'Лютий', 'Березень', 'Квітень', 'Травень', 'Червень', 'Липень', 'Серпень', 'Вересень', 'Жовтень', 'Листопад', 'Грудень'];\n\n// const arrDay = ['Неділя', 'Понеділок', 'Вівторок', 'Середа', 'Четвер', 'П`ятниця', 'Субота'];\n// console.log(namesOfMonth[date.getMonth()]);\n\n// console.log(arrDay[date.getDay()]);\n// console.log('new Date()',date);\n// const currentDate = Date.now()\n\n// console.log('Date.now()',currentDate);\n\n// const box = document.querySelector(\".js-box\");\n// const titleTimer = document.querySelector(\".js-timer\");\n// let counter = 11;\n// setTimeout(() => {\n//   box.style.display = \"block\";\n\n//   const id = setInterval(() => {\n//     counter -= 1;\n//     titleTimer.textContent = counter;\n\n//     if (!counter) {\n//       //!counter counter === 0\n//       clearInterval(id);\n//       titleTimer.textContent = \"X\";\n//       titleTimer.addEventListener(\"click\", onClick);\n//       // box.style.display = \"none\";\n//     }\n//   }, 1000);\n\n// }, 5000);\n\n// function onClick() {\n//   box.style.display = \"none\";\n// }\n\nconst day = document.querySelector('.date-day');\nconst date = document.querySelector('.date');\nconst month = document.querySelector('.date-month');\nconst year = document.querySelector('.date-year');\nconst digitalClock = document.querySelector('.digital-clock');\nconst arrowSecond = document.querySelector('.clock-seconds__arrow');\nconst arrowMinutes = document.querySelector('.clock-minutes__arrow');\nconst arrowHours = document.querySelector('.clock-hours__arrow');\n\nconst namesOfMonth = [\n  'Січень',\n  'Лютий',\n  'Березень',\n  'Квітень',\n  'Травень',\n  'Червень',\n  'Липень',\n  'Серпень',\n  'Вересень',\n  'Жовтень',\n  'Листопад',\n  'Грудень',\n];\n\nconst arrDay = [\n  'Неділя',\n  'Понеділок',\n  'Вівторок',\n  'Середа',\n  'Четвер',\n  'П`ятниця',\n  'Субота',\n];\n\nsetInterval(() => {\n  const currentTime = new Date();\n  const currentDay = arrDay[currentTime.getDay()];\n  const currentDate = currentTime.getDate();\n  const currentMonth = namesOfMonth[currentTime.getMonth()];\n  const currentYear = currentTime.getFullYear();\n  const currentHour = currentTime.getHours();\n  const currentMinutes = currentTime.getMinutes();\n  const currentSeconds = currentTime.getSeconds();\n\n  const changeSeconds = (360 / 60) * currentSeconds;\n  const changeMinutes = (360 / 60) * currentMinutes;\n  const changeHours =\n    (360 / 12) * currentHour + (360 / 12 / 60) * currentMinutes;\n\n  // console.log(changeSeconds);\n  const formatTime = `${currentHour\n    .toString()\n    .padStart(2, '0')} : ${currentMinutes\n    .toString()\n    .padStart(2, '0')} : ${currentSeconds.toString().padStart(2, '0')}`;\n\n  day.textContent = currentDay;\n  date.textContent = currentDate;\n  month.textContent = currentMonth;\n  year.textContent = currentYear;\n\n  digitalClock.textContent = `Поточний час: ${formatTime}`;\n\n  arrowSecond.style.transform = `rotate(${changeSeconds}deg)`;\n  arrowMinutes.style.transform = `rotate(${changeMinutes}deg)`;\n  arrowHours.style.transform = `rotate(${changeHours}deg)`;\n}, 1000);\n\n// // console.log(currentYear);\n\n// const currentTime = new Date();\n\n// const targetDate = new Date('4/11/2023')\n\n// setInterval(()=>{\n//     const currentDate = new Date();\n\n//     console.log(convertMs(targetDate - currentDate));\n// },1000)\n\n// function convertMs(ms) {\n//     // Number of milliseconds per unit of time\n//     const second = 1000;\n//     const minute = second * 60;\n//     const hour = minute * 60;\n//     const day = hour * 24;\n\n//     // Remaining days\n//     const days = Math.floor(ms / day);\n//     // Remaining hours\n//     const hours = Math.floor((ms % day) / hour);\n//     // Remaining minutes\n//     const minutes = Math.floor(((ms % day) % hour) / minute);\n//     // Remaining seconds\n//     const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//     return { days, hours, minutes, seconds };\n//   }\n\n// !  --------------------------\n"],"names":["$44a7b7abb7c71322$var$timeoutId","$44a7b7abb7c71322$var$refsNotification","notification","document","querySelector","btn","$44a7b7abb7c71322$var$hideNotification","classList","remove","addEventListener","clearTimeout","add","setTimeout","console","log","$44a7b7abb7c71322$var$refs","startBtn","stopBtn","clockface","$44a7b7abb7c71322$var$timer","constructor","onTick","this","intervalId","isActive","init","time","getTimeComponents","start","startTime","Date","now","setInterval","deltaTime","stop","clearInterval","pad","Math","floor","value","String","padStart","hours","mins","secs","textContent","bind","$44a7b7abb7c71322$var$day","$44a7b7abb7c71322$var$date","$44a7b7abb7c71322$var$month","$44a7b7abb7c71322$var$year","$44a7b7abb7c71322$var$digitalClock","$44a7b7abb7c71322$var$arrowSecond","$44a7b7abb7c71322$var$arrowMinutes","$44a7b7abb7c71322$var$arrowHours","$44a7b7abb7c71322$var$namesOfMonth","$44a7b7abb7c71322$var$arrDay","currentTime","currentDay","getDay","currentDate","getDate","currentMonth","getMonth","currentYear","getFullYear","currentHour","getHours","currentMinutes","getMinutes","currentSeconds","getSeconds","changeSeconds","changeMinutes","changeHours","formatTime","toString","style","transform"],"version":3,"file":"asynchrony_and_date__promises.5c872e53.js.map"}